# This file contains pin mappings for the stock BTT SKR E3 V3
# See https://klipper3d.org for Klipper installation instructions and information
# See docs/Config_Reference.md for a description of parameters.
[mcu]
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_38000B001450415833323520-if00
restart_method: command

#Uncomment to include additonal configs
#[include picoadxl.cfg]
#[include park.cfg]
[include macros/G27.cfg]
[include macros/INITIALIZE_VARIABLE.cfg]
[include macros/Load_Filament.cfg]
[include macros/M204.cfg]
[include macros/M205.cfg]
#[include macros/M600.cfg]
[include macros/M701.cfg]
[include macros/M702.cfg]
#[include macros/PAUSE_PARK.cfg]
[include macros/RETRACT.cfg]
[include macros/Unload_Filament.cfg]
[include macros/M486.cfg] # Exclude Objects
[include adaptive_mesh.cfg]
#[include pause_park.cfg]
[virtual_sdcard]
path: ~/gcode_files
[display_status]
[pause_resume]
[exclude_object]

[input_shaper]
shaper_freq_x: 57.6
shaper_type_x: mzv
shaper_freq_y: 41.0
shaper_type_y: mzv

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 246
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
#rotation_distance: 8 # Stock Lead Screw
rotation_distance: 40 # Belted Z
gear_ratio: 80:16 # Belted Z
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 240

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999


[bltouch]
sensor_pin: ^PC14
control_pin: PA1
pin_up_touch_mode_reports_triggered: False
stow_on_each_sample: False
probe_with_touch_mode: True #not necessary but can avoid temporary errors after successful homing on the 3.1
x_offset: -46
y_offset: -9.5
#z_offset: 0.26
samples: 2
samples_result: median
sample_retract_dist: 6.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

[safe_z_home]
home_xy_position: 117.5, 117.5 # Change coordinates to the center of your print bed
speed: 100
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[extruder]
max_extrude_only_distance: 400.0
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
#rotation_distance: 34.406 #Stock Klipper Rotation Distance for Ender 3v2  
rotation_distance: 32.112 #Measured Rotation Distance
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Generic 3950
sensor_pin: PA0
#pressure_advance: 0.22 #Silk PLA
max_extrude_cross_section: 0.8 #Get rid of max extrusion errors for 0.4 nozzle
#pressure_advance: 0.4 #30.11.2022
pressure_advance: 0.35 #PLA
#pressure_advance: 0.75 #PETG
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan] #part_cooling_fan
pin: PC7

[heater_fan motherboard_fan]
pin: PB15

[heater_fan hotend_fan]
pin: PC6
heater: extruder
heater_temp: 50.0
max_power: 1.0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3500
max_z_velocity: 5
max_z_accel: 100

[bed_mesh]
speed: 120
horizontal_move_z: 7
mesh_min: 15, 15
mesh_max: 199, 199
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 100
screw_thread: CW-M4

[axis_twist_compensation]
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
calibrate_end_x: 199
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
calibrate_y: 112.5
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed


#####################################
#                                   #
#          ~  MACROS  ~             #
#                                   #
#####################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28 ; home if not already homed
    {% endif %}
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}
  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% else %}
    {%if printer.toolhead.homed_axes != "xyz" %}
      G28
      #{action_respond_info("Use G28 to Home First")}
    {% endif %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z12 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z12 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}
[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}

    ; Ender 3 Custom Start G-code

    G21 ; set units to millimeters
    G90 ; set absolute movement
    M82 ; ABSOLUTE EXTRUSION MODE
    G92 E0 ; Reset Extruder
    G28 ; Home all axes
    M104 S175 ; Start heating up the nozzle most of the way
    BED_MESH_CALIBRATE
    G0 X242 Y117.5 Z2 F3000
    M190 S{bedtemp} ; Start heating the bed, wait until target temperature reached
    M109 S{hotendtemp} ; Finish heating the nozzle


[gcode_macro PRINT_END]
gcode:
    G91 ;Relative positioning
    G1 E-2.5 F2700 ;Retract a bit
    G1 E-5 Z0.2 f2400 ;Retract a bit and raize 
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positioning
    
    G1 X0 Y125 F2000 ;Present print
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    
    M84 X Y E ;Disable all steppers but Z

[gcode_macro M600]
gcode:
    PAUSE                ; Pause


#####################################################################
# Filament Change                                                  ##
#####################################################################
 #M600: Filament Change. This macro will pause the printer, move the
 #tool to the change position, and retract the filament 130mm. Adjust
 #the retraction settings for your own extruder. After filament has
 #been changed, the print can be resumed from its previous position
 #with the "SWAP_RESUME" gcode.

#[gcode_macro UNLOAD]
#gcode:
#  G91
#  G1 E10 F450
#  G1 E-20 F850
#  G1 E-400 F1500 #Fully Retract filament out of the printer

#[gcode_macro LOAD_FILAMENT]
#gcode:
#  M117  LOADING...
#  G91
#  G1 E25.0 F1000
#  G1 E300 F1500
#  G4 P900
#  G1 E35.0 F250
#  G90

#[gcode_macro PAUSE_MACRO]
#gcode:
#  PAUSE
#  PARK_MACRO
#  SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro PURGE]
gcode:
  M117 PURGING..
  G91
  G1 E45.0 F250
  G90

#[gcode_macro G27]
#gcode:
#  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
#  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
#
#  {% if 'save_variables' in printer %}
#    {% set svv = printer.save_variables.variables %}
#    {% if 'park_x' in svv %}
#      {% set default_x = svv.park_x %}
#    {% endif %}
#    {% if 'park_y' in svv %}
#      {% set default_y = svv.park_y %}
#    {% endif %}
#  {% endif %}
#
#  {% set x = params.X|default(default_x)|float %}
#  {% set y = params.Y|default(default_y)|float %}
#  {% set z = params.Z|default(20)|float %}
#
#  {% if printer.toolhead.homed_axes != "xyz" %}
#    {action_respond_info("Please home XYZ first")}
#  {% else %}
#    SAVE_GCODE_STATE NAME=G27_state
#    G91
#    G1 Z{z}
#    G90
#    G1 X{x} Y{y} F3000
#    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
#  {% endif %}

##Below Macro with credit to Hywel Martin #https://github.com/KevinOConnor/klipper/issues/1354
#[gcode_macro PARK_MACRO]
#default_parameter_X: 0
#default_parameter_Y: 0
#default_parameter_Z: 15
#gcode:
#  M117 PARKING..
#  G91
#  G1 E-3.14 F1500
#  G1 Z{Z}
#  G90
#G1 X{X} Y{Y} F3000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.650
#*# pid_ki = 2.017
#*# pid_kd = 108.963
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.495
#*# pid_ki = 0.827
#*# pid_kd = 1336.556
#*#
#*# [bltouch]
#*# z_offset = 1.005
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.236453, 0.136802, -0.039818, -0.135000, -0.142682
#*# 	  0.178953, 0.074302, -0.077318, -0.157500, -0.168932
#*# 	  0.185203, 0.041802, -0.107318, -0.185000, -0.173932
#*# 	  0.161453, 0.044302, -0.024818, -0.168750, -0.158932
#*# 	  0.197703, 0.120552, -0.014818, -0.085000, -0.072682
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 199.0
#*# mesh_x_pps = 2
#*# max_x = 199.0
#*#
#*# [bed_mesh FirstMesh]
#*# version = 1
#*# points =
#*# 	0.230000, 0.147500, 0.062500, -0.092500, 0.247500
#*# 	0.172500, 0.090000, 0.032500, -0.087500, 0.170000
#*# 	0.045000, 0.100000, -0.042500, -0.172500, 0.145000
#*# 	0.080000, 0.017500, -0.017500, -0.155000, 0.145000
#*# 	0.062500, 0.027500, -0.010000, -0.167500, 0.182500
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [axis_twist_compensation]
#*# z_compensations = 0.017500, 0.042500, -0.060000
#*# compensation_start_x = 20.0
#*# compensation_end_x = 199.0
